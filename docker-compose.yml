# docker-compose.yml
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      # Remove in production
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - viral-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    command: redis-server --appendonly yes

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_ENABLED=${REDIS_ENABLED}
      - LOG_LEVEL=${LOG_LEVEL}
      - ENVIRONMENT=${ENVIRONMENT}
      - REDIS_QUEUE_NAME=${REDIS_QUEUE_NAME}
      - REDIS_RESULT_PREFIX=${REDIS_RESULT_PREFIX}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}
      - LLM_ENDPOINT=${LLM_ENDPOINT}
      - LLM_MODEL=${LLM_MODEL}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS}
      - STORAGE_PROVIDER=${STORAGE_PROVIDER}
      - LOCAL_STORAGE_PATH=${LOCAL_STORAGE_PATH}
      - AUDIO_STORAGE_PATH=${AUDIO_STORAGE_PATH}
      - STORY_STORAGE_PATH=${STORY_STORAGE_PATH}
      - STORYBOARD_STORAGE_PATH=${STORYBOARD_STORAGE_PATH}
      - FILE_RETENTION_DAYS=${FILE_RETENTION_DAYS}
      - CLEANUP_INTERVAL_HOURS=${CLEANUP_INTERVAL_HOURS}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - API_KEY_ENABLED=${API_KEY_ENABLED}
      - API_KEY=${API_KEY}
    command: python -m viralStoryGenerator.src.worker_runner api --port 8000
    networks:
      - viral-network
    restart: unless-stopped
    mem_limit: 1G
    cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 15s`
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./storage:/app/storage
      - ./.env:/app/.env:ro

  scraper:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_ENABLED=${REDIS_ENABLED}
      - LOG_LEVEL=${LOG_LEVEL}
      - ENVIRONMENT=${ENVIRONMENT}
      - REDIS_QUEUE_NAME=${REDIS_QUEUE_NAME}
      - REDIS_RESULT_PREFIX=${REDIS_RESULT_PREFIX}
      - REDIS_WORKER_BATCH_SIZE=${REDIS_WORKER_BATCH_SIZE}
      - REDIS_WORKER_MAX_CONCURRENT=${REDIS_WORKER_MAX_CONCURRENT}
    command: python3 -m viralStoryGenerator.src.worker_runner worker --worker-type scrape
    networks:
      - viral-network
    restart: unless-stopped
    shm_size: '2gb'
    mem_limit: 4G
    cpus: '1.5'
    volumes:
      - ./data:/app/data
      - ./.env:/app/.env:ro

  api-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    environment:
      - REDIS_WORKER_BATCH_SIZE=${REDIS_WORKER_BATCH_SIZE}
      - REDIS_WORKER_MAX_CONCURRENT=${REDIS_WORKER_MAX_CONCURRENT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_ENABLED=${REDIS_ENABLED}
      - LOG_LEVEL=${LOG_LEVEL}
      - ENVIRONMENT=${ENVIRONMENT}
      - REDIS_QUEUE_NAME=${REDIS_QUEUE_NAME}
      - REDIS_RESULT_PREFIX=${REDIS_RESULT_PREFIX}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}
      - LLM_ENDPOINT=${LLM_ENDPOINT}
      - LLM_MODEL=${LLM_MODEL}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS}
      - STORAGE_PROVIDER=${STORAGE_PROVIDER}
      - LOCAL_STORAGE_PATH=${LOCAL_STORAGE_PATH}
      - AUDIO_STORAGE_PATH=${AUDIO_STORAGE_PATH}
      - STORY_STORAGE_PATH=${STORY_STORAGE_PATH}
      - STORYBOARD_STORAGE_PATH=${STORYBOARD_STORAGE_PATH}
      - FILE_RETENTION_DAYS=${FILE_RETENTION_DAYS}
      - CLEANUP_INTERVAL_HOURS=${CLEANUP_INTERVAL_HOURS}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - API_KEY_ENABLED=${API_KEY_ENABLED}
      - API_KEY=${API_KEY}
    command: python3 -m viralStoryGenerator.src.worker_runner worker --worker-type queue
    networks:
      - viral-network
    restart: unless-stopped
    mem_limit: 2G
    cpus: '1.0'
    volumes:
      - ./data:/app/data
      - ./storage:/app/storage
      - ./.env:/app/.env:ro

networks:
  viral-network:
    driver: bridge

volumes:
  redis-data:
    driver: local